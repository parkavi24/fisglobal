1.select deptno, count(deptno) from emp group by deptno having count(deptno) >5;



2. select deptno, count(deptno) from emp having count(deptno) > 3 group by deptno;



3. select deptno, avg(sal) from emp group by deptno having avg(sal) >2500;



4. select job, sum(sal) Payroll from emp where job<>'SALESMAN' group by job having sum(sal) >=5000 order by sum(sal) desc;



5. select deptno, min(sal), max(sal), sum(sal) from emp where job='CLERK'group by deptno
having min(sal) <1000

1. select empno, ename, sal, deptno from emp
where sal < ( select sal from emp where empno= 7566);




2. select empno, ename, job from emp
where job = ( select job from emp where ename =Upper('ford')) ;




3. Select empno, ename, hiredate, sal job from emp
where hiredate > (select hiredate from emp where ename ='MILLER')
ORDER by sal;



4. select empno, ename, sal, job from emp
where deptno = (select deptno from dept where dname='sales');



5. select empno, ename, sal, job from emp
where deptno = (select deptno from dept where loc= 'NEW YORK') and job = 'CLERK';




6. select empno, ename, sal, job from emp
where deptno = (Select deptno from dept where dname ='SALES');




7. select empno, ename, sal, comm, sal+IFNull(comm,0) from emp
where deptno = (select deptno from dept where loc='CHICAGO' );




8. select * from emp where deptno = (select deptno from emp where ename='FORD') and
job in (select job from emp where deptno= (select deptno from dept where dname='SALES'));

9.select job, avg(sal) from emp group by job having avg(sal) in
-> (select avg(sal) from emp group by job);

1. SELECT JOB FROM EMP WHERE DEPTNO=10 UNION SELECT JOB FROM EMP WHERE DEPTNO = 20



2. SELECT DEPTNO, JOB FROM EMP WHERE DEPTNO=10 UNION SELECT DEPTNO, JOB FROM EMP WHERE DEPTO=20;



3. SELECT EMPNO,ENAME FROM EMP WHERE DEPTNO=10 UNION SELECT EMPNO, ENAME FROM EMP WHERE DEPTNO=20 ORDER B 2;



4. SELECT EMPNO, ENAME, JOB FROM EMP WHERE DEPTNO=(SELECT DEPTNO FROM DEPT WHERE DNAME='SALES')
UNION
SELECT EMPNO,ENAME,JOB FROM EMP WHERE DEPTNO=(SELECT DEPTNO FROM DEPT WHERE DNAME='ACCOUNTING');



5. SELECT DEPTNO, JOB FROM EMP WHERE DEPTNO=10 UNION ALL SELECT DEPTNO, JOB FROM EMP WHERE DEPTNO=20;

* SELECT c.customer_number,c.firstname,a.account_number FROM account_master a join
customer_master c ON c.customer_number=a.customer_number WHERE
day(a.account_opening_date)>'15' ORDER BY c.customer_number,a.account_number;
*SELECT am.customer_number,firstname, account_number
FROM customer_master cm INNER JOIN account_master am
ON cm.customer_number=am.customer_number
WHERE account_status='Terminated'
ORDER BY am.customer_number, account_number

*SELECT count(customer_number) Count_Customer
FROM customer_master
WHERE customer_number NOT IN (SELECT customer_number FROM account_master);

* SELECT transaction_type,count(transaction_number) Trans_Count
FROM account_masteram INNER JOIN transaction_details td
ON am.account_number=td.account_number
WHERE customer_number like '%001'
GROUP BY transaction_type
ORDER BY transaction_type;

*selectfirstname
FROM customer_master cm INNER JOIN account_master am
ON cm.customer_number=am.customer_number
group by firstname
having count(account_number)>1
order by firstname;



*SELECT td.account_number, opening_balance+sum(transaction_amount) Deposit_Amount
FROM account_masteram INNER JOIN transaction_details td
ON am.account_number=td.account_number
WHERE transaction_type='deposit'
GROUP BY account_number
ORDER BY account_number;

*select
branch_master.branch_city, count(account_master.account_number) as No_of_Accounts from
branch_master left join account_master on account_master.branch_id=branch_master.branch_id
group by branch_master.branch_city order by branch_city;

*selectcustomer_master.customer_number, firstname, customer_city, branch_city
fromaccount_master inner join customer_master on account_master.customer_number =
customer_master.customer_number
inner join branch_master on account_master.branch_id = branch_master.branch_id
wherecustomer_city != branch_city order by customer_master.customer_number;

*SELECT count(ld.customer_number) Count
FROM customer_master cm INNER JOIN loan_detailsld
ON cm.customer_number=ld.customer_number
WHERE cm.customer_number NOT IN ( SELECTcustomer_number FROM account_master)
