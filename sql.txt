

create table air_ticket_info (
ticket_id varchar(10), 
profile_id varchar(10), 
flight_id varchar(10), 
flight_departure_date date,
status_ varchar(10),
constraint pk_ticket_id primary key(ticket_id),
constraint dpearture_current_date_constraint check (flight_departure_date > getdate()) 
);

create table air_flight_details(
flight_id varchar(10),
flight_departure_date date,
price decimal(8,2),
available_seats int(11),
constraint flight_id_constraint check (flight_id between '3170' and '3180')
);

create table air_flight(
flight_id varchar(10),
airline_id varchar(10),
airline_name varchar(30),
from_location varchar(20),
to_location varchar(20),
departure_time time,
arrival_time time,
duration time,
total_seats int(11),
constraint pk_flight_id primary key(flight_id)
);


create table air_credit_card_details(
profile_id varchar(10),
card_number bigint(16),
card_type varchar(10),
expiration_month int(2),
expiration_year int(4),
constraint card_type_debit_credit check(card_type in ('DEBIT', 'CREDIT'))
);
create table air_passenger_profile(
profile_id varchar(10),
password_ varchar(10),
first_name varchar(10) not null,
last_name varchar(10),
address varchar(100),
mobile_number bigint(10),
email_id varchar(30),
constraint pk_profile_id primary key(profile_id),
constraint email_id_format check (email_id like '%_@_%.__%'),
constraint name_no_num_constraint check (first_name not like '%*[0-9]%' and last_name not like '%^[0-9]%')
);


show tables;

Date Methods
------------
To display current date : SELECT CURDATE();
or SELECT DATE(NOW());



To Add dates
------------
syntax: ADDDATE(date, days)
example : select ADDDATE(CURDATE(),1);



syntax: ADDDATE(date, INTERVAL value addunit)



example: SELECT ADDDATE("2017-06-15 09:34:21", INTERVAL 3 HOUR);
example: SELECT ADDDATE(CURDATE(),INTERVAL 1 HOUR);
SELECT ADDDATE("2017-06-15", INTERVAL -2 MONTH);



To get date in format use below method:
----------------------------------------
sytax: DATE_ADD(date, INTERVAL value addunit)
SELECT DATE_ADD(curdate(), interval 1 day);



To find difference between dates:
---------------------------------
DATEDIFF(date1, date2)
SELECT DATEDIFF( "2017-06-15 15:25:35","2017-06-25 09:34:21");



DATE_SUB(date, INTERVAL value interval)
SELECT DATE_SUB("2017-06-15 09:34:21", INTERVAL 3 HOUR);
SELECT DATE_SUB("2017-06-15 09:34:21", INTERVAL 15 MINUTE);



To Select Current Time: SELECT CURTIME() + 1;
SELECT CURTIME() + 1; --> adds one hour



To Format Dates
----------------
sytax: DATE_FORMAT(date, format);
SELECT DATE_FORMAT("2017-06-15", "%Y");



Format Description
------ ------------
%a Abbreviated weekday name (Sun to Sat)
%b Abbreviated month name (Jan to Dec)
%c Numeric month name (0 to 12)
%D Day of the month as a numeric value, followed by suffix (1st, 2nd, 3rd, ...)
%d Day of the month as a numeric value (01 to 31)
%e Day of the month as a numeric value (0 to 31)
%f Microseconds (000000 to 999999)
%H Hour (00 to 23)
%h Hour (00 to 12)
%I Hour (00 to 12)
%i Minutes (00 to 59)
%j Day of the year (001 to 366)
%k Hour (0 to 23)
%l Hour (1 to 12)
%M Month name in full (January to December)
%m Month name as a numeric value (00 to 12)
%p AM or PM
%r Time in 12 hour AM or PM format (hh:mm:ss AM/PM)
%S Seconds (00 to 59)
%s Seconds (00 to 59)
%T Time in 24 hour format (hh:mm:ss)
%U Week where Sunday is the first day of the week (00 to 53)
%u Week where Monday is the first day of the week (00 to 53)
%V Week where Sunday is the first day of the week (01 to 53). Used with %X
%v Week where Monday is the first day of the week (01 to 53). Used with %x
%W Weekday name in full (Sunday to Saturday)
%w Day of the week where Sunday=0 and Saturday=6
%X Year for the week where Sunday is the first day of the week. Used with %V
%x Year for the week where Monday is the first day of the week. Used with %v
%Y Year as a numeric, 4-digit value
%y Year as a numeric, 2-digit value




Examples:



SELECT DATE_FORMAT("2017-06-15", "%M %d %Y");
SELECT DATE_FORMAT("2017-06-15", "%W %M %e %Y");
SELECT DATE_FORMAT(curdate(), "%W %e %M %Y");




Case statement
--------------
CASE
WHEN condition1 THEN result1
WHEN condition2 THEN result2
WHEN conditionN THEN resultN
ELSE result
END;



SELECT orderID, customerId,
CASE
WHEN customerId = 7 THEN "Silver Customer"
WHEN customerId = 37 THEN "Gold customer"
WHEN customerId = 77 THEN "Platinum Customer"
ELSE "Please get Membership"
END
FROM Orders;




SELECT HTNO,NAME,TOTAL,
CASE
WHEN TOTAL >=160 THEN 'Distinction'
WHEN TOTAL >=120 AND TOTAL <160 THEN 'FIRST CLASS'
WHEN TOTAL >=100 AND TOTAL < 120 THEN 'SECOND CLASS'
WHEN TOTAL >=70 AND TOTAL<100 THEN 'THIRD CLASS'
ELSE 'FAIL'
END
FROM RESULTS;


[11:55 AM] Praveen Kumar  G S
create table students(studentid int, firstname varchar(20), lastname varchar(20), class varchar(5));
SELECT studentid, firstname, lastname FROM students WHERE class = 'CS';
EXPLAIN SELECT studentid, firstname, lastname FROM students WHERE class = 'CS';
CREATE INDEX class ON students (class);
EXPLAIN SELECT studentid, firstname, lastname FROM students WHERE class = 'CS';
SHOW INDEXES FROM students;




